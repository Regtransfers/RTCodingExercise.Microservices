version: '3.4'

services:
  webmvc:
    image: regtransfers/rtcodingexercise-webmvc
    build:
      context: .
      dockerfile: src/Web/WebMVC/Dockerfile
    depends_on:
      - sqldata
      - catalog-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - regtransfers_network

  catalog-api:
    image: regtransfers/rtcodingexercise-catalogapi
    build:
      context: .
      dockerfile: src/Services/Catalog/Catalog.API/Dockerfile
    depends_on:
      - sqldata
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Database=sqldata
      - ConnectionStrings__RabbitMQ=rabbitmq
    networks:
      - regtransfers_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  sqldata:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - SA_PASSWORD=Your_password123
      - ACCEPT_EULA=Y
    networks:
      - regtransfers_network
    volumes:
      - sql_data:/var/opt/mssql
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "sqlcmd -S localhost -U sa -P 'Your_password123' -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"         # RabbitMQ message broker port
      - "15672:15672"       # RabbitMQ management UI
    networks:
      - regtransfers_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  regtransfers_network:
    driver: bridge

volumes:
  sql_data:
